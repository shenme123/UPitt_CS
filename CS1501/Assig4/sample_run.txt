bash-3.2$ java ChangeableGraph assigngraph.txt

1. R (eport)
2. M (inimum Spanning Tree)
3. S (hortest Path from) i j
4. D (own edge) i j
5. U (p edge) i j
6. C (hange weight of edge) i j x
7. E (ulerian)
8. Q (uit)

Enter your choice: 1
6 8
0: 0-4  5.00  0-1  8.00  0-2  4.00  
1: 1-5  7.00  0-1  8.00  
2: 2-4  3.00  0-2  4.00  
3: 3-5  6.00  3-4  9.00  
4: 4-5  2.00  3-4  9.00  2-4  3.00  0-4  5.00  
5: 4-5  2.00  3-5  6.00  1-5  7.00  

Network is connected
Connected Components
 1.  0 1 2 3 4 5

1. R (eport)
2. M (inimum Spanning Tree)
3. S (hortest Path from) i j
4. D (own edge) i j
5. U (p edge) i j
6. C (hange weight of edge) i j x
7. E (ulerian)
8. Q (uit)

Enter your choice: 2
Minimum Spanning Tree
1-5  7.00
0-2  4.00
3-5  6.00
2-4  3.00
4-5  2.00
22.00000

1. R (eport)
2. M (inimum Spanning Tree)
3. S (hortest Path from) i j
4. D (own edge) i j
5. U (p edge) i j
6. C (hange weight of edge) i j x
7. E (ulerian)
8. Q (uit)

Enter your choice: 3
Enter from vertex: 2
Enter to vertex: 3
Shortest Path from vertex 2 to vertex 3 is:
(11.00)  2->4  3.00   4->5  2.00   5->3  6.00

1. R (eport)
2. M (inimum Spanning Tree)
3. S (hortest Path from) i j
4. D (own edge) i j
5. U (p edge) i j
6. C (hange weight of edge) i j x
7. E (ulerian)
8. Q (uit)

Enter your choice: 3
Enter from vertex: 0
Enter to vertex: 5
Shortest Path from vertex 0 to vertex 5 is:
(7.00)  0->4  5.00   4->5  2.00

1. R (eport)
2. M (inimum Spanning Tree)
3. S (hortest Path from) i j
4. D (own edge) i j
5. U (p edge) i j
6. C (hange weight of edge) i j x
7. E (ulerian)
8. Q (uit)

Enter your choice: 3
Enter from vertex: 1
Enter to vertex: 2
Shortest Path from vertex 1 to vertex 2 is:
(12.00)  1->0  8.00   0->2  4.00

1. R (eport)
2. M (inimum Spanning Tree)
3. S (hortest Path from) i j
4. D (own edge) i j
5. U (p edge) i j
6. C (hange weight of edge) i j x
7. E (ulerian)
8. Q (uit)

Enter your choice: 7
Graph has an Eulerian path.
Eulerian Path: 0 - 4 - 5 - 3 - 4 - 2 - 0 - 1 - 5

1. R (eport)
2. M (inimum Spanning Tree)
3. S (hortest Path from) i j
4. D (own edge) i j
5. U (p edge) i j
6. C (hange weight of edge) i j x
7. E (ulerian)
8. Q (uit)

Enter your choice: 6
Enter from vertex: 0
Enter to vertex: 1
Enter to weight: 10
Change edge 0->1 from 8.0 to 10.0

1. R (eport)
2. M (inimum Spanning Tree)
3. S (hortest Path from) i j
4. D (own edge) i j
5. U (p edge) i j
6. C (hange weight of edge) i j x
7. E (ulerian)
8. Q (uit)

Enter your choice: 1
6 8
0: 0-4  5.00  0-1 10.00  0-2  4.00  
1: 1-5  7.00  0-1 10.00  
2: 2-4  3.00  0-2  4.00  
3: 3-5  6.00  3-4  9.00  
4: 4-5  2.00  3-4  9.00  2-4  3.00  0-4  5.00  
5: 4-5  2.00  3-5  6.00  1-5  7.00  

Network is connected
Connected Components
 1.  0 1 2 3 4 5

1. R (eport)
2. M (inimum Spanning Tree)
3. S (hortest Path from) i j
4. D (own edge) i j
5. U (p edge) i j
6. C (hange weight of edge) i j x
7. E (ulerian)
8. Q (uit)

Enter your choice: 3
Enter from vertex: 1
Enter to vertex: 2
Shortest Path from vertex 1 to vertex 2 is:
(12.00)  1->5  7.00   5->4  2.00   4->2  3.00 

1. R (eport)
2. M (inimum Spanning Tree)
3. S (hortest Path from) i j
4. D (own edge) i j
5. U (p edge) i j
6. C (hange weight of edge) i j x
7. E (ulerian)
8. Q (uit)

Enter your choice: 6
Enter from vertex: 0  
Enter to vertex: 2
Enter to weight: -5
Remove edge 0->2

1. R (eport)
2. M (inimum Spanning Tree)
3. S (hortest Path from) i j
4. D (own edge) i j
5. U (p edge) i j
6. C (hange weight of edge) i j x
7. E (ulerian)
8. Q (uit)

Enter your choice: 4
Enter from vertex: 4
Enter to vertex: 2
Remove edge 4->2

1. R (eport)
2. M (inimum Spanning Tree)
3. S (hortest Path from) i j
4. D (own edge) i j
5. U (p edge) i j
6. C (hange weight of edge) i j x
7. E (ulerian)
8. Q (uit)

Enter your choice: 1
6 6
0: 0-4  5.00  0-1 10.00  
1: 1-5  7.00  0-1 10.00  
2: 
3: 3-5  6.00  3-4  9.00  
4: 4-5  2.00  3-4  9.00  0-4  5.00  
5: 4-5  2.00  3-5  6.00  1-5  7.00  

Network is not connected
Connected Components
 1.  0 1 3 4 5
 2.  2

1. R (eport)
2. M (inimum Spanning Tree)
3. S (hortest Path from) i j
4. D (own edge) i j
5. U (p edge) i j
6. C (hange weight of edge) i j x
7. E (ulerian)
8. Q (uit)

Enter your choice: 3
Enter from vertex: 5
Enter to vertex: 2
Shortest Path from vertex 5 to vertex 2 is:
No path

1. R (eport)
2. M (inimum Spanning Tree)
3. S (hortest Path from) i j
4. D (own edge) i j
5. U (p edge) i j
6. C (hange weight of edge) i j x
7. E (ulerian)
8. Q (uit)

Enter your choice: 5
Enter from vertex: 0
Enter to vertex: 2
Enter weight: 4
Insert edge 0->2 (4.0)

1. R (eport)
2. M (inimum Spanning Tree)
3. S (hortest Path from) i j
4. D (own edge) i j
5. U (p edge) i j
6. C (hange weight of edge) i j x
7. E (ulerian)
8. Q (uit)

Enter your choice: 5
Enter from vertex: 2
Enter to vertex: 4
Enter weight: 3
Insert edge 2->4 (3.0)

1. R (eport)
2. M (inimum Spanning Tree)
3. S (hortest Path from) i j
4. D (own edge) i j
5. U (p edge) i j
6. C (hange weight of edge) i j x
7. E (ulerian)
8. Q (uit)

Enter your choice: 1
6 8
0: 0-4  5.00  0-1 10.00  0-2  4.00  
1: 1-5  7.00  0-1 10.00  
2: 2-4  3.00  0-2  4.00  
3: 3-5  6.00  3-4  9.00  
4: 4-5  2.00  3-4  9.00  2-4  3.00  0-4  5.00  
5: 4-5  2.00  3-5  6.00  1-5  7.00  

Network is connected
Connected Components
 1.  0 1 2 3 4 5

1. R (eport)
2. M (inimum Spanning Tree)
3. S (hortest Path from) i j
4. D (own edge) i j
5. U (p edge) i j
6. C (hange weight of edge) i j x
7. E (ulerian)
8. Q (uit)

Enter your choice: 8
bash-3.2$
